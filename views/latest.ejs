<!DOCTYPE html>
<html lang="en">
  <%- include('includes/header') %>
  <body class="bg-gradient-to-br from-gray-50 to-gray-100 min-h-screen flex flex-col">
    <%- include('includes/navbar') %>
    
    <main class="flex-grow animate-fadeIn">
      <div class="container mx-auto px-4 py-8">
        <% if (typeof pagesdebug !== 'undefined') { %>
          <pre class="bg-dark-800 text-gray-200 p-4 rounded-lg overflow-x-auto text-sm mb-8 font-mono shadow-md"><%= pagesdebug %></pre>
        <% } %>

        <div class="max-w-5xl mx-auto mb-10">
          <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-dark-800 mb-4 flex items-center justify-center md:text-4xl">
              <i class="fas fa-clock text-primary-500 mr-3"></i>
              <span class="bg-clip-text text-transparent bg-gradient-to-r from-dark-800 to-dark-700 font-display">Latest Discoveries</span>
            </h1>
            <p class="text-lg text-dark-600 max-w-2xl mx-auto">
              Fresh magnet links discovered from the BitTorrent DHT network in real-time
            </p>
          </div>
        </div>

        <% if (typeof pages !== 'undefined') { %>
          <div class="max-w-5xl mx-auto mb-10">            
            <div class="flex justify-center gap-4 my-8">
              <% if (pages.current != 0) { %>
                <button onclick="window.location.href='/latest?p=<%= pages.previous %>'" 
                        class="bg-white py-2.5 px-6 rounded-lg shadow-sm hover:shadow-md border border-gray-100 text-dark-800 font-medium flex items-center gap-2 transition-all duration-300 hover:-translate-x-1 transform">
                  <i class="fas fa-chevron-left text-primary-500"></i>
                  <span>Previous</span>
                </button>
              <% } %>
              <% if (pages.available >= pages.next) { %>
                <button onclick="window.location.href='/latest?p=<%= pages.next %>'" 
                        class="bg-white py-2.5 px-6 rounded-lg shadow-sm hover:shadow-md border border-gray-100 text-dark-800 font-medium flex items-center gap-2 transition-all duration-300 hover:translate-x-1 transform">
                  <span>Next</span>
                  <i class="fas fa-chevron-right text-primary-500"></i>
                </button>
              <% } %>
            </div>
          </div>
        <% } %>

        <% if (typeof results !== 'undefined' && results.length > 0) { %>
          <div class="max-w-5xl mx-auto space-y-6" id="magnets-container">
            <% results.forEach(function(item) { %>
              <div class="bg-white rounded-xl shadow-elegant overflow-hidden transition-all duration-300 hover:shadow-elegant-lg hover:-translate-y-1 transform border border-gray-100 group relative magnet-item" data-infohash="<%= item.infohash %>">
                <!-- Pulse indicator for new items -->
                <div class="absolute top-4 right-4 flex items-center">
                  <span class="animate-ping absolute h-3 w-3 rounded-full bg-primary-400 opacity-75"></span>
                  <span class="relative rounded-full h-3 w-3 bg-primary-500"></span>
                </div>
                
                <div class="p-6 md:p-8">
                  <div class="flex justify-between items-start mb-4">
                    <h2 class="text-xl font-bold text-dark-900 break-words group-hover:text-primary-600 transition-colors duration-300 pr-10"><%= item.name %></h2>
                    <div class="text-xs font-medium text-gray-500 bg-gray-100 px-3 py-1.5 rounded-full flex items-center">
                      Just Added
                      <i class="fas fa-bolt ml-1.5 text-yellow-500"></i>
                    </div>
                  </div>
                  
                  <div class="flex flex-wrap items-center text-sm font-medium text-dark-500 mb-4 gap-2">
                    <span class="bg-gray-100 rounded-md px-2 py-1 font-mono">Infohash:</span>
                    <span class="select-all font-mono bg-gray-50 px-2 py-1 rounded text-dark-600 border border-gray-200 text-xs md:text-sm"><%= item.infohash %></span>
                  </div>
                  
                  <% 
                    var filestring = typeof item.files === 'string' ? item.files : '';
                    var formatstring = filestring.split(',').join('\n');
                    if (formatstring.length > 100) { 
                      formatstring = formatstring.substring(0, 100) + '...'; 
                    }
                  %>
                  <% if (formatstring) { %>
                    <div class="bg-gray-50 rounded-lg p-4 mb-4 overflow-hidden text-sm text-dark-700 font-mono border border-gray-200 shadow-inner">
                      <pre class="whitespace-pre-wrap break-words"><%= formatstring %></pre>
                    </div>
                  <% } %>
                  
                  <div class="flex flex-wrap justify-between items-center gap-4 mt-6">
                    <a class="flex items-center transition-all duration-300 py-2.5 px-5 bg-primary-500 hover:bg-primary-600 text-white font-medium rounded-lg shadow-sm hover:shadow-md"
                       href="/infohash?q=<%= item.infohash %>">
                      <i class="fas fa-info-circle mr-2"></i>
                      <span>View Details</span>
                    </a>
                    <a class="flex items-center transition-all duration-300 py-2.5 px-5 bg-dark-700 hover:bg-dark-800 text-white font-medium rounded-lg shadow-sm hover:shadow-md"
                       href="<%= item.magnet + trackers %>">
                      <i class="fas fa-magnet mr-2 text-primary-500"></i>
                      <span>Magnet URI</span>
                    </a>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        <% } %>

        <% if (typeof pages !== 'undefined') { %>
          <div class="flex justify-center gap-4 mt-10">
            <% if (pages.current != 0) { %>
              <button onclick="window.location.href='/latest?p=<%= pages.previous %>'" 
                      class="bg-white py-2.5 px-6 rounded-lg shadow-sm hover:shadow-md border border-gray-100 text-dark-800 font-medium flex items-center gap-2 transition-all duration-300 hover:-translate-x-1 transform">
                <i class="fas fa-chevron-left text-primary-500"></i>
                <span>Previous</span>
              </button>
            <% } %>
            <% if (pages.available >= pages.next) { %>
              <button onclick="window.location.href='/latest?p=<%= pages.next %>'" 
                      class="bg-white py-2.5 px-6 rounded-lg shadow-sm hover:shadow-md border border-gray-100 text-dark-800 font-medium flex items-center gap-2 transition-all duration-300 hover:translate-x-1 transform">
                <span>Next</span>
                <i class="fas fa-chevron-right text-primary-500"></i>
              </button>
            <% } %>
          </div>
        <% } %>

        <% if (typeof timer !== 'undefined') { %>
          <div class="text-center mt-8">
            <p class="text-sm text-dark-500 bg-white inline-block py-2 px-4 rounded-full shadow-sm border border-gray-100">
              <i class="fas fa-bolt text-yellow-500 mr-2"></i>
              <span>Query time:</span>
              <span class="font-medium ml-1"><%= timer %> ms</span>
            </p>
          </div>
        <% } %>
      </div>
    </main>

    <%- include('includes/footer') %>

    <script>
      // WebSocket connection for real-time updates
      let wsAddress = "<%= wsServerAddress %>";
      
      // Make sure WebSocket address has proper protocol
      if (!wsAddress.startsWith('ws')) {
        wsAddress = wsAddress.replace(/^http/, 'ws');
        if (!wsAddress.startsWith('ws')) {
          wsAddress = `ws://${wsAddress}`;
        }
      }
      
      console.log('Connecting to WebSocket server at:', wsAddress);
      const ws = new WebSocket(wsAddress);
      
      // Keep track of currently displayed magnets
      const displayedMagnets = new Map();
      const maxMagnetsToDisplay = 15;
      
      // Initialize displayed magnets from the server-rendered content
      document.addEventListener('DOMContentLoaded', function() {
        const magnetItems = document.querySelectorAll('.magnet-item');
        magnetItems.forEach(item => {
          const infohash = item.getAttribute('data-infohash');
          if (infohash) {
            displayedMagnets.set(infohash, item);
          }
        });
      });

      ws.onmessage = (event) => {
        const data = JSON.parse(event.data);
        
        // Handle latest magnets update
        if (data.eventType === 'latest_magnets' && Array.isArray(data.latestMagnets)) {
          updateLatestMagnets(data.latestMagnets);
        }
        
        // Handle new magnet being added
        if (data.eventType === 'new_magnet' && data.data) {
          addNewMagnet(data.data);
        }
      };
      
      // Function to update all magnets when receiving a full update
      function updateLatestMagnets(magnets) {
        if (!magnets || !magnets.length) return;
        
        const container = document.getElementById('magnets-container');
        if (!container) return;
        
        // Clear existing magnets
        displayedMagnets.clear();
        container.innerHTML = '';
        
        // Add new magnets
        magnets.forEach(magnet => {
          const magnetElement = createMagnetElement(magnet);
          container.prepend(magnetElement);
          displayedMagnets.set(magnet.infohash, magnetElement);
        });
      }
      
      // Function to add a single new magnet
      function addNewMagnet(magnet) {
        if (!magnet || !magnet.infohash) return;
        
        const container = document.getElementById('magnets-container');
        if (!container) return;
        
        // If we already have this magnet, don't add it again
        if (displayedMagnets.has(magnet.infohash)) return;
        
        // Create new magnet element
        const magnetElement = createMagnetElement(magnet);
        
        // Add with animation
        magnetElement.style.opacity = '0';
        magnetElement.style.transform = 'translateY(-20px)';
        container.prepend(magnetElement);
        
        // Force reflow
        magnetElement.offsetHeight;
        
        // Add transition
        magnetElement.style.transition = 'opacity 0.5s ease-out, transform 0.5s ease-out';
        magnetElement.style.opacity = '1';
        magnetElement.style.transform = 'translateY(0)';
        
        // Add to our tracking Map
        displayedMagnets.set(magnet.infohash, magnetElement);
        
        // If we have more than the max, remove the oldest
        if (displayedMagnets.size > maxMagnetsToDisplay) {
          const firstKey = Array.from(displayedMagnets.keys())[displayedMagnets.size - 1];
          const oldestElement = displayedMagnets.get(firstKey);
          
          // Animate removal
          oldestElement.style.opacity = '0';
          oldestElement.style.transform = 'translateY(20px)';
          
          setTimeout(() => {
            oldestElement.remove();
            displayedMagnets.delete(firstKey);
          }, 500);
        }
      }
      
      // Function to create a magnet element
      function createMagnetElement(magnet) {
        const div = document.createElement('div');
        div.className = 'bg-white rounded-xl shadow-elegant overflow-hidden transition-all duration-300 hover:shadow-elegant-lg hover:-translate-y-1 transform border border-gray-100 group relative magnet-item';
        div.setAttribute('data-infohash', magnet.infohash);
        
        // Process files if needed
        let filesHtml = '';
        if (magnet.files && magnet.files.length) {
          let filestring = Array.isArray(magnet.files) ? magnet.files.join(',') : magnet.files;
          let formatstring = filestring.split(',').join('\n');
          if (formatstring.length > 100) {
            formatstring = formatstring.substring(0, 100) + '...';
          }
          
          if (formatstring) {
            filesHtml = `
              <div class="bg-gray-50 rounded-lg p-4 mb-4 overflow-hidden text-sm text-dark-700 font-mono border border-gray-200 shadow-inner">
                <pre class="whitespace-pre-wrap break-words">${formatstring}</pre>
              </div>
            `;
          }
        }
        
        div.innerHTML = `
          <!-- Pulse indicator for new items -->
          <div class="absolute top-4 right-4 flex items-center">
            <span class="animate-ping absolute h-3 w-3 rounded-full bg-primary-400 opacity-75"></span>
            <span class="relative rounded-full h-3 w-3 bg-primary-500"></span>
          </div>
          
          <div class="p-6 md:p-8">
            <div class="flex justify-between items-start mb-4">
              <h2 class="text-xl font-bold text-dark-900 break-words group-hover:text-primary-600 transition-colors duration-300 pr-10">${magnet.name}</h2>
              <div class="text-xs font-medium text-gray-500 bg-gray-100 px-3 py-1.5 rounded-full flex items-center">
                Just Added
                <i class="fas fa-bolt ml-1.5 text-yellow-500"></i>
              </div>
            </div>
            
            <div class="flex flex-wrap items-center text-sm font-medium text-dark-500 mb-4 gap-2">
              <span class="bg-gray-100 rounded-md px-2 py-1 font-mono">Infohash:</span>
              <span class="select-all font-mono bg-gray-50 px-2 py-1 rounded text-dark-600 border border-gray-200 text-xs md:text-sm">${magnet.infohash}</span>
            </div>
            
            ${filesHtml}
            
            <div class="flex flex-wrap justify-between items-center gap-4 mt-6">
              <a class="flex items-center transition-all duration-300 py-2.5 px-5 bg-primary-500 hover:bg-primary-600 text-white font-medium rounded-lg shadow-sm hover:shadow-md"
                 href="/infohash?q=${magnet.infohash}">
                <i class="fas fa-info-circle mr-2"></i>
                <span>View Details</span>
              </a>
              <a class="flex items-center transition-all duration-300 py-2.5 px-5 bg-dark-700 hover:bg-dark-800 text-white font-medium rounded-lg shadow-sm hover:shadow-md"
                 href="${magnet.magnet}${getTorrentTrackers()}">
                <i class="fas fa-magnet mr-2 text-primary-500"></i>
                <span>Magnet URI</span>
              </a>
            </div>
          </div>
        `;
        
        return div;
      }
      
      // Helper function to get trackers for magnet links
      function getTorrentTrackers() {
        // Use the same trackers that server uses
        return '<%= trackers %>';
      }
      
      ws.onopen = () => {
        console.log('WebSocket connection established.');
      };

      ws.onerror = (error) => {
        console.error('WebSocket Error:', error);
      };
    </script>
  </body>
</html> 